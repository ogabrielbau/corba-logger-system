// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v4.0.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// /opt/ACE_wrappers/TAO/TAO_IDL/be/be_codegen.cpp:454

#ifndef _TAO_IDL_LOGGERS_VEIMAB_H_
#define _TAO_IDL_LOGGERS_VEIMAB_H_


#include "LoggerC.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"
// TAO_IDL - Generated from
// /opt/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // /opt/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:889

  

  template<>
  class SArg_Traits< ::LoggerModule::Severity>
    : public
        Basic_SArg_Traits_T<
            ::LoggerModule::Severity,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
  // TAO_IDL - Generated from
  // /opt/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_arg_traits.cpp:142

  

#if !defined (_LOGGERMODULE_LOGGER__SARG_TRAITS_)
#define _LOGGERMODULE_LOGGER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::LoggerModule::Logger>
    : public Object_SArg_Traits_T<
        ::LoggerModule::Logger_ptr,
        ::LoggerModule::Logger_var,
        ::LoggerModule::Logger_out,
        TAO::Any_Insert_Policy_Stream>
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// /opt/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:34

namespace POA_LoggerModule
{
  

  
  // TAO_IDL - Generated from
  // /opt/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_interface/interface_sh.cpp:72

  

  class Logger;
  typedef Logger *Logger_ptr;

  class  Logger
    : public virtual PortableServer::ServantBase
  {
  protected:
    Logger ();
  
  public:
    /// Useful for template programming.
    typedef ::LoggerModule::Logger _stub_type;
    typedef ::LoggerModule::Logger_ptr _stub_ptr_type;
    typedef ::LoggerModule::Logger_var _stub_var_type;

    Logger (const Logger& rhs);
    virtual ~Logger () = default;

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::LoggerModule::Logger *_this ();
    
    virtual const char* _interface_repository_id () const;
    // TAO_IDL - Generated from
    // /opt/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual void log (
      ::LoggerModule::Severity severidade,
      const std::string endereco,
      ::CORBA::UShort pid,
      ::CORBA::ULong hora,
      const std::string msg) = 0;

    static void log_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // /opt/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual ::CORBA::Boolean verbose () = 0;

    static void _get_verbose_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
    // TAO_IDL - Generated from
    // /opt/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_operation/operation_sh.cpp:35

    virtual void verbose (
      ::CORBA::Boolean verbose) = 0;

    static void _set_verbose_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };


// TAO_IDL - Generated from
// /opt/ACE_wrappers/TAO/TAO_IDL/be/be_visitor_module/module_sh.cpp:65

} // module LoggerModule

#endif /* ifndef */

